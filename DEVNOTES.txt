Navigation works 
From New Hunt, makeNewHunt() populates Hunt Overview
From Hunts List, chooseAndShowHunt() populates Hunt Overview
From Hunt Overview, buttons navigate to map/weather/watchlist/fieldNotes/harvest/photo and back

Watchlist Demo has hacky constructors for html-friendly animal selector and animal counter arrays
Watchlist Demo has listener for incrementing Counts (but doesn't update the Counter object)
Watchlist Demo has listener for updating Selections (but doesn't update the Selector object)

HuntEvent constructor is called by its subclasses (Observation, Photo, etc.)

Listeners for chooseAndShowView and chooseHuntFromList only care about clicks on elements with the "navBtn" class 
displaySelector() works in new-hunt view as well as watchlist view

To do:

-Selector - make these interactive (toggle Animal.isSelected on click)


- Hunt Events
	- call the appropriate subclass constructors at the appropriate time, and let user modify the objects as desired

- Field Notes
  - show this view (and display counter) on click of newFieldNotes button and also on selection from the list of existing fieldNotes (passing fieldNotesID, which will be time-based like huntID)
  - provide newFieldNotes, editFieldNote, and editWatchlist functionality

- Hunt Overview
  - needs EventList display (Field Notes, Photos, and Harvests) 
  	- huntCode.js has a function for creating event objects, each of which includes a header (indicating which of the three types of content is present)
  	- each linked field-notes event gets a watchlist instance w/ increment buttons, etc
 - enable event creation (Field Notes, Photos (requires service worker), and Harvests)

- Handle database connection and storage
- Handle retrieval of Weather and Map in their respective views
- Make Signup and Login forms and handle auth/auth

- Build  the client-side architecture and coordinate with server

- Populate 'drawer'
- (Recreate hamburger and drawer without MDL library)
- Handle predictions and other longer-term features (see site plan)


